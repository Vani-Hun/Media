<div class="container-upload">
    <div class="container-file" id="file-container">
        <div class="header-file" id="header-file">
            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                <g id="SVGRepo_iconCarrier">
                    <path
                        d="M7 10V9C7 6.23858 9.23858 4 12 4C14.7614 4 17 6.23858 17 9V10C19.2091 10 21 11.7909 21 14C21 15.4806 20.1956 16.8084 19 17.5M7 10C4.79086 10 3 11.7909 3 14C3 15.4806 3.8044 16.8084 5 17.5M7 10C7.43285 10 7.84965 10.0688 8.24006 10.1959M12 12V21M12 12L15 15M12 12L9 15"
                        stroke="#000000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                </g>
            </svg>
            <p>Select video to upload </p>
            <p>Or drag and drop a file</p>
            <p>Long videos can be split into multiple parts to get more exposure</p>
            <p>MP4 or WebM</p>
            <p>720x1280 resolution or higher</p>
            <p>Up to 30 minutes</p>
            <p>Less than 2 GB</p>
        </div>
        <label for="file" class="footer-file" id="upload-label">
            <p>Select file</p>
            <input id="file" type="file" accept=".mp4, .webm">
        </label>
        <div>
            <video id="video-preview" style="display: none" controls type="video/mp4"> </video>
        </div>
        <div>
            <input type="text" style="display:none;" id="video-description" placeholder="Description">
        </div>
        <div class="buttons-container" style="display: none;" id="buttons-container">
            <button class="button">Khác</button>
            <button class="button" id="edit-button">Chỉnh sửa</button>
            <button class="button" id="upload-button">Up</button>
        </div>
    </div>
</div>

<script>
    const fileInput = document.getElementById('file');
    const buttonsContainer = document.getElementById('buttons-container');
    const fileContainer = document.getElementById('file-container');
    const videoPreview = document.getElementById('video-preview');
    const headerButton = document.getElementById('header-file');
    const uploadLabel = document.getElementById('upload-label');
    const otherButton = document.querySelector('.buttons-container .button:nth-child(1)');
    const uploadButton = document.querySelector('.buttons-container .button:nth-child(3)');
    const descriptionInput = document.getElementById('video-description');
    const editButton = document.getElementById('edit-button');
    fileInput.addEventListener('change', handleFileSelect);

    otherButton.addEventListener('click', function () {
        // Khi nút "Khác" được bấm, kích hoạt sự kiện click trên input file để chọn tệp.
        fileInput.click();
    });
    function showLoader() {
        var loader = document.querySelector('.loader');
        loader.classList.add('visible');
    }

    function hideLoader() {
        var loader = document.querySelector('.loader');
        loader.classList.remove('visible');
    }
    let editedDescription = ''; // Biến lưu giá trị chỉnh sửa mô tả
    uploadButton.addEventListener('click', function (event) {

        // Tạo formData để gửi dữ liệu tệp lên server
        editedDescription = descriptionInput.value;
        const formData = new FormData();
        formData.append('video', fileInput.files[0]);
        formData.append('description', editedDescription);
        showLoader()
        // Gửi POST request đến API endpoint của bạn
        fetch('/customer/upload', {
            method: 'POST',
            body: formData
        })
            .then(() => {
                window.location.href = '/customer/upload'
                hideLoader()
            })
            .catch(error => {

                // Xử lý lỗi nếu có
                console.error('Error:', error);
            });
    });
    function handleFileSelect(event) {
        const file = event.target.files[0];

        if (file) {
            const videoURL = URL.createObjectURL(file);
            videoPreview.src = videoURL;
            descriptionInput.style.display = "block"
            // Ẩn phần chọn file và hiển thị video trước
            headerButton.style.display = 'none';
            uploadLabel.style.display = 'none';
            fileContainer.style.display = 'block';
            buttonsContainer.style.display = 'block';
            videoPreview.style.display = 'block';
            videoPreview.play();
        }
    }

</script>