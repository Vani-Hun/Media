<div class="container2">
    <form id="otpForm" class="form-otp" onsubmit="event.preventDefault(); verifyOtp();">
        <div class="otp-title">OTP</div>
        <div class="otp-title">Verification Code</div>
        <p class="otp-message" id="otp-error"></p>

        <div class="otp-inputs">
            <input id="input1" type="text" maxlength="1" oninput="moveToNextInput(this, 'input2', 'input1')">
            <input id="input2" type="text" maxlength="1" oninput="moveToNextInput(this, 'input3', 'input1')">
            <input id="input3" type="text" maxlength="1" oninput="moveToNextInput(this, 'input4', 'input2')">
            <input id="input4" type="text" maxlength="1" oninput="moveToNextInput(this, 'input5', 'input3')">
            <input id="input5" type="text" maxlength="1" oninput="moveToNextInput(this, 'input6', 'input4')">
            <input id="input6" type="text" maxlength="1" oninput="moveToNextInput(this, null, 'input5')">
        </div>
        <div class="button-otp">
            <button id="cancelButton" class="otp-action" type="button"
                onclick="window.location.href='/customer/sign-up'">Cancel</button>
            <button id="sendOTPButton" class="otp-action" type="button">Send</button>
            <button id="verifyButton" class="otp-action" type="submit" disabled>Verify me</button>
        </div>
    </form>
</div>
<div class="loader">
    <li class="ball"></li>
    <li class="ball"></li>
    <li class="ball"></li>
</div>

<script type="module">
    import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js'
    import { getAnalytics } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-analytics.js'
    import { getAuth, signInWithPhoneNumber, RecaptchaVerifier } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js'
    import { getFirestore } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js'

    function initializeFirebase() {

        const firebaseConfig = {
            apiKey: "AIzaSyAbjYYbreGwSN-pY5UoNZp-KF4yJcgWNV8",
            authDomain: "fir-76c15.firebaseapp.com",
            projectId: "fir-76c15",
            storageBucket: "fir-76c15.appspot.com",
            messagingSenderId: "112323394158",
            appId: "1:112323394158:web:db2d6bf8492a523ced847f",
            measurementId: "G-Q7ZQR4556T"
        };

        const app = initializeApp(firebaseConfig);
        const auth = getAuth(app);

        return { app, auth };
    }

    function setOtpErrorText(text) {
        otpErrorElement.textContent = text;
    }

    function getCookie(name) {
        const cookies = document.cookie.split(';');
        console.log("cookies:", cookies)
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            if (cookie.startsWith(name + '=')) {
                return cookie.substring(name.length + 1);
            }
        }
        return null;
    }

    function showLoader() {
        var loader = document.querySelector('.loader');
        loader.classList.add('visible');
    }
    function hideLoader() {
        var loader = document.querySelector('.loader');
        loader.classList.remove('visible');
    }
    function showCustomAlert(message) {
        const customAlert = document.getElementById('customAlert');
        const alertMessage = document.getElementById('alertMessage');
        alertMessage.textContent = message;
        customAlert.style.display = 'flex';
        setTimeout(() => {
            customAlert.style.display = 'none';
        }, 1500);
    }

    async function sendOTP(phone, app, auth, sendOTPButton) {
        const phoneNumber = `+84${phone.trim().slice(1)}`;
        auth.languageCode = 'it';
        try {
            window.recaptchaVerifier = await new RecaptchaVerifier(auth, 'sendOTPButton', {
                'size': 'invisible',
                'callback': (response, err) => {
                    showCustomAlert(error)
                }
            });
            sendOTPButton.style.display = 'none'
            window.confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, window.recaptchaVerifier);
            setOtpErrorText("We have sent a verification code to your mobile number")
        } catch (error) {
            console.log("error:", error)
            setOtpErrorText("Failed to send OTP. Please try again or click 'Cancel' to sign up anew.")
            sendOTPButton.style.display = 'flex'
        }
    }

    let message = JSON.parse('<%- JSON.stringify(message) %>');

    const sendOTPButton = document.getElementById('sendOTPButton')
    const { app, auth } = initializeFirebase();

    const otpErrorElement = document.getElementById('otp-error');
    let clickCountSendOTPButton = 0;
    setOtpErrorText(message);


    sendOTPButton.addEventListener('click', () => {
        const phone = getCookie('phone');

        // Check if the click count is less than 4
        if (clickCountSendOTPButton < 4) {
            sendOTP(phone, app, auth, sendOTPButton);
            clickCountSendOTPButton++;
        } else {
            window.location.href = "/customer/sign-up"
        }
    });


</script>

<script>
    const otpErrorElement2 = document.getElementById('otp-error');
    function moveToNextInput(currentInput, nextInputId, prevInputId) {
        const maxLength = parseInt(currentInput.getAttribute('maxlength'));
        const currentLength = currentInput.value.length;

        if (currentLength === maxLength) {
            if (nextInputId) {
                const nextInput = document.getElementById(nextInputId);
                if (nextInput) {
                    nextInput.focus();
                }
            }
        } else if (currentLength === 0 && prevInputId && currentInput.selectionStart === 0) {
            const prevInput = document.getElementById(prevInputId);
            if (prevInput) {
                prevInput.focus();
            }
        }

        checkInputsFilled();
    }

    function checkInputsFilled() {
        const inputs = Array.from({ length: 6 }, (_, index) => document.getElementById(`input${index + 1}`).value);
        const isAllFilled = inputs.every(value => value !== '' && !isNaN(value));
        const verifyButton = document.getElementById('verifyButton');

        if (isAllFilled) {
            verifyButton.removeAttribute('disabled');
        } else {
            verifyButton.setAttribute('disabled', 'disabled');
        }
    }

    function setOtpErrorText(text) {
        otpErrorElement2.textContent = text;
    }
    function verifyOtp() {
        const otpValue = document.getElementById('input1').value +
            document.getElementById('input2').value +
            document.getElementById('input3').value +
            document.getElementById('input4').value +
            document.getElementById('input5').value +
            document.getElementById('input6').value;
        showLoader()

        if (window.confirmationResult) {
            window.confirmationResult.confirm(otpValue).then(function (result) {

                fetch('/customer/verify-otp', {
                    method: 'POST'
                })
                    .then(response => {
                        if (response.ok) {
                            showCustomAlert("Success")
                            window.location.href = "/customer/sign-in"
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });

            }).catch(function (error) {
                console.error(error);

                setOtpErrorText("The OTP entered is either incorrect or has expired. Please try again or click 'Cancel' to start the sign-up process anew.")
            });
        } else {
            hideLoader()
            setOtpErrorText("The OTP entered is either incorrect or has expired. Please try again or click 'Cancel' to start the sign-up process anew.")
        }

    }
</script>